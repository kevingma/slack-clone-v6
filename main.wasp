app SlackCloneV5 {
  wasp: {
    version: "^0.15.0"
  },
  title: "Slack Clone v5",
  client: {
    rootComponent: import { Main } from "@src/client/Main.tsx",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {},
      google: {
        // Added config block with scopes ensuring we get the user's email.
        config: {
          scope: ["openid", "profile", "email"]
        }
      },
    },
    onAuthFailedRedirectTo: "/login"
  }
}

// Landing page
route LandingPageRoute { path: "/", to: LandingPage }
page LandingPage {
  component: import { LandingPage } from "@src/client/LandingPage.tsx"
}

//#region Auth
route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  authRequired: false,
  component: import { LoginPage } from "@src/auth/LoginPage.tsx"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  authRequired: false,
  component: import { SignupPage } from "@src/auth/SignupPage.tsx"
}
//#endregion

/* 
  Removed the entire Example Notes Feature section here 
*/

//#region Chat Feature
route ChatPageRoute { path: "/chat", to: ChatPage }
page ChatPage {
  authRequired: true,
  component: import { ChatPage } from "@src/chatFeature/ChatPage.tsx"
}

query getChatMessages {
  fn: import { getChatMessages } from "@src/chatFeature/operations.ts",
  entities: [ChatMessage]
}

action createChatMessage {
  fn: import { createChatMessage } from "@src/chatFeature/operations.ts",
  entities: [ChatMessage]
}
//#endregion