app SlackCloneV5 {
  wasp: {
    version: "^0.15.0"
  },
  title: "Slack Clone v5",
  client: {
    rootComponent: import { Main } from "@src/client/Main.tsx",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {
        userSignupFields: import { localSignupFields } from "@src/auth/localSignupFields.ts"
      },
      google: {
        configFn: import { googleConfig } from "@src/auth/google.ts",
        userSignupFields: import { googleSignupFields } from "@src/auth/google.ts"
      },
      gitHub: {
        configFn: import { githubConfig } from "@src/auth/github.js",
        userSignupFields: import { githubSignupFields } from "@src/auth/github.js"
      },
    },
    onAuthFailedRedirectTo: "/login"
  },
}

// Landing page
route LandingPageRoute { path: "/", to: LandingPage }
page LandingPage {
  component: import { LandingPage } from "@src/client/LandingPage.tsx"
}

//#region Auth
route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  authRequired: false,
  component: import { LoginPage } from "@src/auth/LoginPage.tsx"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  authRequired: false,
  component: import { SignupPage } from "@src/auth/SignupPage.tsx"
}
//#endregion

//#region Chat Feature
route ChatPageRoute { path: "/chat", to: ChatPage }
page ChatPage {
  authRequired: true,
  component: import { ChatPage } from "@src/chatFeature/ChatPage.tsx"
}

query getChatMessages {
  fn: import { getChatMessages } from "@src/chatFeature/operations.ts",
  entities: [ChatMessage, Channel, User, Workspace]
}

action createChatMessage {
  fn: import { createChatMessage } from "@src/chatFeature/operations.ts",
  entities: [ChatMessage, Channel, User, Workspace]
}

query getChannels {
  fn: import { getChannels } from "@src/chatFeature/operations.ts",
  entities: [Channel, Workspace]
}

// Added WorkspaceUser here for createChannel + deleteChannel
action createChannel {
  fn: import { createChannel } from "@src/chatFeature/operations.ts",
  entities: [Channel, User, Workspace, WorkspaceUser]
}

action deleteChannel {
  fn: import { deleteChannel } from "@src/chatFeature/operations.ts",
  entities: [Channel, ChatMessage, User, Workspace, WorkspaceUser]
}
//#endregion

//#region User Feature
route ProfileRoute { path: "/profile", to: ProfilePage }
page ProfilePage {
  authRequired: true,
  component: import { ProfilePage } from "@src/userFeature/ProfilePage.tsx"
}

action updateDisplayName {
  fn: import { updateDisplayName } from "@src/userFeature/operations.ts",
  entities: [User]
}
//#endregion

//#region Workspace Feature
query getWorkspaces {
  fn: import { getWorkspaces } from "@src/workspaceFeature/operations.ts",
  entities: [Workspace, WorkspaceUser, User]
}

action createWorkspace {
  fn: import { createWorkspace } from "@src/workspaceFeature/operations.ts",
  entities: [Workspace, WorkspaceUser, User]
}
//#endregion